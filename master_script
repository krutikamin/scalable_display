#!/bin/bash

SCREEN_COUNTER=0
LINE=""
REPLY=""
DIR_PATH="$HOME/Downloads/scalable_display"
WIDTH=0
HEIGHT=0
FILES="$DIRPATH"
BAZEL_SIZE=0
SCREENS_HORIZONTAL=0
SCREENS_VERTICAL=0

echo $FILES

entering()
{
	echo "*********** Entering ${FUNCNAME[1]} **************"
}

exiting()
{
	echo "*********** Exiting ${FUNCNAME[1]} **************"
}

add_dimensions()
{
	entering
	echo "Now adding $1's dimensions."
	local TEMP=`head -n 1 "$1"`
	WIDTH=$(( $WIDTH + $TEMP ))
	#WIDTH=$(( $WIDTH+`head -n 1 "$1"` ))
	echo "\$WIDTH = $WIDTH"
	local TEMP=`tail -n 1 "$1"`
	HEIGHT=$(( $HEIGHT + $TEMP ))
	#HEIGHT=$HEIGHT+`tail -n 1 "$1"`
	echo "\$HEIGHT = $HEIGHT"
	exiting
}

check_for_integer()
{
	entering
	local TEMP=$1
	echo $TEMP | grep "[^0-9]" > /dev/null 2>&1
	if [ "$?" -eq "0" ]; then
		echo "Please enter a positive integer..."
		eval ${FUNCNAME[1]}
	else
		eval $2=$TEMP
	fi
	exiting
}

get_num_tiles()
{
	entering
	echo -n "Please enter the number of tiles: "
	read 
	check_for_integer $REPLY SCREEN_COUNTER
	echo -n "Please verify that the number of tiles are $SCREEN_COUNTER (yes/no)- "
	read
	REPLY=`echo $REPLY | tr "[:upper:]" "[:lower:]"`
	case $REPLY in
		yes|ye|y)
			echo -n "Please enter number of tiles in horizontal direction- "
			read
			check_for_integer $REPLY SCREENS_HORIZONTAL
			echo -n "Please enter number of tiles in vertical direction- "
			read
			check_for_integer $REPLY SCREENS_VERTICAL
			local TEMP=$SCREEN_COUNTER
			while [ $TEMP -gt 0 ]
			do
				echo "\$TEMP before add_dimensions - $TEMP"
				echo "before add dimensions raspberrypi${TEMP}_screen_resolution.txt"
				add_dimensions "raspberrypi${TEMP}_screen_resolution.txt"
				TEMP=$(( $TEMP-1 ))
			done
			;;
		no|n)
			get_num_tiles
			;;
		*)
			get_num_tiles
			;;
	esac
	exiting
}

compensate_bazel()
{
	echo -n "Please enter approximate bazel size to compensate - "
	read
	check_for_integer $REPLY BAZEL_SIZE
}

make_config_file()
{
	local TEMP=0
	local REMAINDER=0 
	local X_COORDS=0
	local Y_COORDS=0
	local BAZEL_WIDTH=$(( WIDTH / SCREENS_HORIZONTAL - BAZEL_SIZE))
	local BAZEL_HEIGHT=$(( HEIGHT / SCREENS_VERTICAL - BAZEL_SIZE))

	TEMP=1
	X_COORDS=0
	Y_COORDS=0
	while [ $TEMP -ne $SCREENS_HORIZONTAL ]; do
		`X${TEMP}=$X_COORDS`
		X_COORDS=$(( WIDTH / SCREENS_HORIZONTAL + BAZEL_SIZE + BAZEL_SIZE ))
		TEMP=$(( $TEMP + 1 ))
	done
	echo "\$X1 = $X1"
	cat <<-END > .piwall
	[${SCREEN_COUNTER}bez_wall]
	width=$WIDTH
	height=$HEIGHT
	x=0
	y=0


	END
	TEMP=0
	while [ $TEMP -lt $SCREEN_COUNTER ]; do
		cat <<-END >> .piwall	
		[${SCREEN_COUNTER}bez_wall_$(( TEMP + 1 ))]
		wall=$SCREEN_COUNTERbez_wall
		width=$(( WIDTH / SCREENS_HORIZONTAL - BAZEL_SIZE))
		height=$(( HEIGHT / SCREENS_VERTICAL - BAZEL_SIZE))
		END
	TEMP=$(( $TEMP + 1 ))
	done
}
		


#############################################################################################################
####################################################  MAIN  #################################################
#############################################################################################################

get_num_tiles
echo "Total width = $WIDTH"
echo "Total height = $HEIGHT"
compensate_bazel
make_config_file
echo "\$BAZEL_SIZE=$BAZEL_SIZE"
